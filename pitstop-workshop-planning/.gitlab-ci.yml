stages:
  - test
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_IMAGE: $REGISTRY_USER/workshop-service:$CI_COMMIT_SHORT_SHA
  NODE_VERSION: "19"
  SONAR_TOKEN: "$SONAR_TOKEN"
  SONAR_HOST_URL: "$SONAR_HOST_URL"
  SNYK_TOKEN: "$SNYK_TOKEN"
  DOCKER_TLS_CERTDIR: ""

# Stage 1: SAST - SonarCloud Analysis
sonarcloud_sast_scan:
  stage: test
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  allow_failure: true

# Stage 2: SCA - Snyk Dependency Scan
snyk_dependency_scan:
  stage: test
  image: node:latest
  before_script:
    - npm install -g snyk
    # Install npm, snyk, and snyk-to-html
    - npm install -g npm@latest
    - npm install -g snyk
    - npm install snyk-to-html -g
  script:
    - snyk auth $SNYK_TOKEN
    - snyk monitor --project-name=$CI_PROJECT_NAME
    - snyk test --json | snyk-to-html -o snyk_results.html
  artifacts:
    when: always
    paths:
      - snyk_results.html
  allow_failure: true

# Stage 3: Container Security - Snyk Container Scan
snyk_container_scan:
  stage: test
  image:
    name: snyk/snyk:docker
    entrypoint: [""]
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:dind
  script:
    - docker build -t $DOCKER_IMAGE .
    - snyk auth $SNYK_TOKEN
    - snyk container test $DOCKER_IMAGE --file=Dockerfile
  allow_failure: true

# Stage 4: Build Docker Image
build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD
  script:
    - docker build -t $DOCKER_IMAGE .
    - docker push $DOCKER_IMAGE

# Stage 5: Deploy (Publish the Docker Image)
deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache git
    - git config --global user.email "mohamedlbaali2002@gmail.com"
    - git config --global user.name "Labaali.mohamed"
  script:
    - git clone https://gitlab.com/medvers-pitstop/kubernetes.git
    - cd kubernetes/k8s-manifests
    - sed -i 's|nozomihub/workshop-service:.*|nozomihub/workshop-service:'"$CI_COMMIT_SHORT_SHA"'|' microservice-workshop.yml
    - git add microservice-workshop.yml
    - git commit -m "Update workshop image to $CI_COMMIT_SHORT_SHA"
    - git push https://Labaali.mohamed:$GITLAB_ACCESS_TOKEN@gitlab.com/medvers-pitstop/kubernetes.git

  only:
    - main